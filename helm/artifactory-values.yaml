global:
  jfrog:
    observability:
      branch: prometheus_revamp
  prometheus: 
    loki_url: http:\/\/loki.jfrog-plg:3100
    release_name: prometheus
installerInfo: '{ "productId": "Helm_prometheus_artifactory/{{ .Chart.Version }}", "features": [ { "featureId": "ArtifactoryVersion/{{ default .Chart.AppVersion .Values.artifactory.image.version }}" }, { "featureId": "{{ if .Values.postgresql.enabled }}postgresql{{ else }}{{ .Values.database.type }}{{ end }}/0.0.0" }, { "featureId": "Platform/{{ default "kubernetes" .Values.installer.platform }}" },  { "featureId": "Channel/Helm_prometheus_artifactory" } ] }'
artifactory:
  openMetrics:
    enabled: true
  customSidecarContainers: |
      - name: "artifactory-fluentd-sidecar"
        image: "partnership-public-images.jfrog.io/fluentd/fluentd:1.18.0"
        imagePullPolicy: "IfNotPresent"
        command:
          - 'sh'
          - '-c'
          - >
            gem install fluent-plugin-prometheus --no-doc;
            curl https://raw.githubusercontent.com/jfrog/log-analytics-prometheus/{{ .Values.global.jfrog.observability.branch }}/fluent_metrics.conf.rt -o fluentd_metrics.conf;
            cp fluentd_metrics.conf fluent.tmp.conf;
            sed -i -e 's/LOKI_URL/{{ .Values.global.prometheus.loki_url }}/g' fluent.tmp.conf;
            mv fluent.tmp.conf fluentd.conf;
            fluentd -v -c fluentd.conf 
        volumeMounts:
          - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
            name: artifactory-volume
        env:
          - name: JF_PRODUCT_DATA_INTERNAL
            value: {{ .Values.artifactory.persistence.mountPath }}

## Allows to add additional kubernetes resources
## Use --- as a separator between multiple resources
## For an example, refer - https://github.com/jfrog/log-analytics-prometheus
additionalResources: |
  apiVersion: v1
  kind: Service
  metadata:
    name: {{ template "artifactory.fullname" . }}-metrics
    annotations:
      prometheus.io/path: "/metrics"
      prometheus.io/scheme: "http"
      prometheus.io/port: "24231"
      prometheus.io/scrape: "true"
    labels:
      app: {{ template "artifactory.name" . }}
      component: {{ template "artifactory.name" . }}
      chart: {{ template "artifactory.chart" . }}
      heritage: {{ .Release.Service }}
      release: {{ .Values.global.prometheus.release_name }}
      {{- with .Values.artifactory.labels }}
  {{ toYaml . | indent 4 }}
      {{- end }}
  spec:
    type: ClusterIP
    ports:
    - name: metrics
      port: 24231
      protocol: TCP
    selector:
      app: {{ template "artifactory.name" . }}
      component: {{ template "artifactory.name" . }}
  ---
  apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    name: servicemonitor-{{ template "artifactory.name" . }}
    labels:
      metrics: jfrog
      app: {{ template "artifactory.name" . }}
      chart: {{ template "artifactory.chart" . }}
      heritage: {{ .Release.Service }}
      release: {{ .Values.global.prometheus.release_name }}
  spec:
    selector:
      matchLabels:
        app: {{ template "artifactory.name" . }}
        component: {{ template "artifactory.name" . }}
    endpoints:
        - port: metrics
          interval: 15s
